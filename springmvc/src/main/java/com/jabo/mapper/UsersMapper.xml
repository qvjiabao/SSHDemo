<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jabo.mapper.UsersMapper">

    <insert id="addModel" parameterType="UserModel">
        insert into users( user_name, user_pwd, cn_name, id_card, sex, position, phone_number, contact_number, email
                         , user_area, working_place, home_address, entry_time, birthday, user_code, is_enable, is_delete
                         , create_date, create_user_name, create_cn_name)
        values (#{userName}, #{userPwd}, #{cnName}, #{idCard}, #{sex}, #{position}, #{phoneNumber}, #{contactNumber},
                #{email}, #{userArea}, #{workingPlace}, #{homeAddress}, #{entryTime}, #{birthday}, #{userCode},
                #{isEnable}, #{isDelete}, #{createDate}, #{createUserName}, #{createCnName})
    </insert>

    <update id="deletedModelById" parameterType="map">
        update users
        set is_delete        = 1,
            update_date      = #{updateData},
            update_user_name = #{updateUserName},
            update_cn_name   = #{updateCnName}
        where user_id = #{id}
    </update>

    <update id="updateModel" parameterType="UserModel">
        update users
        <set>
            <if test="userName != null and userName !=''">
                ,user_name = #{userName}
            </if>
            <if test="cnName != null and cnName !=''">
                ,cn_name = #{cnName}
            </if>
            <if test="idCard != null">
                ,id_card = #{idCard}
            </if>
            <if test="sex != null">
                ,sex = #{sex}
            </if>
            <if test="position != null">
                ,position = #{position}
            </if>
            <if test="phoneNumber != null">
                ,phone_number = #{phoneNumber}
            </if>
            <if test="contactNumber != null">
                ,contact_number = #{contactNumber}
            </if>
            <if test="email != null">
                ,email = #{email}
            </if>
            <if test="userArea != null">
                ,user_area = #{userArea}
            </if>
            <if test="workingPlace != null">
                ,working_place = #{workingPlace}
            </if>
            <if test="homeAddress != null">
                ,home_address = #{homeAddress}
            </if>
            <if test="entryTime != null">
                ,entry_time = #{entryTime}
            </if>
            <if test="birthday != null">
                ,birthday = #{birthday}
            </if>
            <if test="updateDate != null">
                ,update_date = #{updateDate}
            </if>
            <if test="updateCnName != null and updateCnName != ''">
                ,update_cn_name = #{updateCnName}
            </if>
            <if test="updateUserName != null and updateUserName != ''">
                ,update_user_name = #{updateUserName}
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <select id="queryModelById" resultType="UserVO">
        select *
        from users
        where user_Id = #{id}
    </select>

    <select id="queryAllModel" resultType="UserModel" parameterType="map">
        SELECT *
        from users
        <where>
            is_delete = 0
            <choose>
                <when test="userName != null">
                    and user_name like #{userName}
                </when>
                <when test="cnName != null">
                    and cn_name like #{cnName}
                </when>
                <when test="phoneNumber != null">
                    and phone_number like #{phoneNumber}
                </when>
                <when test="email != null">
                    and email like #{email}
                </when>
                <when test="sex != null">
                    and sex = #{sex}
                </when>
            </choose>
        </where>
    </select>

    <select id="queryAllModelPage" resultType="UserVO" parameterType="map">
        SELECT *
        from users
        <where>
            is_delete = 0
            <choose>
                <when test="userName != null">
                    and user_name like #{userName}
                </when>
                <when test="cnName != null">
                    and cn_name like #{cnName}
                </when>
                <when test="phoneNumber != null">
                    and phone_number like #{phoneNumber}
                </when>
                <when test="email != null">
                    and email like #{email}
                </when>
                <when test="sex != null">
                    and sex = #{sex}
                </when>
            </choose>
        </where>
        order by user_id desc
        limit #{page}
        , #{limit}
    </select>
</mapper>